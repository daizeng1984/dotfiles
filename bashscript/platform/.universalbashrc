# This bashrc load the universal setup for bash
# enable color in terminal
export CLICOLOR=1

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

#if [ -n "$force_color_prompt" ]; then
#    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
#	# We have color support; assume it's compliant with Ecma-48
#	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
#	# a case would tend to support setf rather than setaf.)
#	color_prompt=yes
#    else
#	color_prompt=
#    fi
#fi
#
#if [ "$color_prompt" = yes ]; then
#    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
#else
#    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
#fi
#unset color_prompt force_color_prompt

# Alias definitions.

# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi


# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls -hF --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# A copy that can solve Mac's "problem"
alias cp='rsync --progress -ravzI'

# Home brew check and install
checkIfInstalled() {
    if ! type ${1}  > /dev/null 2>&1; then
        printf "${RED}${1} is installed.${NC}\n"
    else
        printf "${RED}${1} might not be installed correctly.${NC}\n"
    fi
}
checkAndBrew() {
    PATH="${PATH}:$HOME/.linuxbrew/bin:/usr/local/bin"
    RED='\033[0;31m'
    NC='\033[0m' # No Color
    # Make sure this is fast than brew ls --versions ${1} > /dev/null; ?
    if ! type "brew"  > /dev/null 2>&1; then
        >&2 printf "${RED}Please install Home Brew first! Mac or Linux${NC}\n"
    else
        if ! type $1 > /dev/null 2>&1; then
            printf "${RED}Brew installing '${1}'${NC}\n"
            brew install $2
        else
            printf "${1} is ready.\n"
        fi
    fi
}

# Fzf and ag is my new love
checkAndBrew "fzf" fzf
checkAndBrew "ag" the_silver_searcher

# Eclim, powerful yet require many setups, here we are only interested in headless mode
function eclimd {
${ECLIPSE_HOME}/eclimd -Dosgi.instance.area.default=$(pwd)/$1
}

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi
