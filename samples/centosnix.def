# Utils
source "${DOTFILES_HOME}/samples/common/utils.def"

deploymeson() {
    deploynix cpp
    local meson_template="
project('myproject', 'cpp',
  version : '0.1',
  default_options : ['warning_level=3',
                     'cpp_std=c++17'])

cxx = meson.get_compiler('cpp')

boost_dep = cxx.find_library('boost_system')
poco_dep = cxx.find_library('PocoFoundation')

exe = executable('main', 'src/main.cpp',
  dependencies: [poco_dep, boost_dep],
  install : true)

test('basic', exe)
"    
    local main_cpp='
#include <boost/lexical_cast.hpp>
#include <Poco/Environment.h>
#include <iostream>

#if defined(__clang__)
#define CC "clang++"
#elif defined (__GNUC__)
#define CC "g++"
#else
#define CC "<unknown compiler>"
#endif

int main() {
  std::cout << "Hello World!" << std::endl
    << "Compiler: " << CC << " " << __VERSION__ << std::endl
    << "Boost: " << (BOOST_VERSION / 100000) << "."
                 << (BOOST_VERSION / 100 % 1000) << "."
                 << (BOOST_VERSION % 100) << std::endl
    << "POCO: " << (Poco::Environment::libraryVersion() >> 24) << "."
                << (Poco::Environment::libraryVersion() >> 16 & 0xff) << "."
                << (Poco::Environment::libraryVersion() >> 8 & 0xff)
                << std::endl;
}
'
    echo $meson_template > $(pwd)/meson.build
    mkdir -p $(pwd)/src/
    [ -f $(pwd)/src/main.cpp ] || echo $main_cpp > $(pwd)/src/main.cpp
    vim $(pwd)/meson.build
}
mc() {
    meson compile -C build
}

# Nix, please do everything!

playmusic() {
    _realURL=$(youtube-dl --get-url --format best ${1})
    #vlc --qt-start-minimized --play-and-exit -I dummy $_realURL &>/dev/null &
    audacious $_realURL &>/dev/null &
}

# to save some human braincells on centos
update_centos_grub() {
    sudo -S vi /etc/default/grub
    sudo -S grub2-mkconfig -o /boot/efi/EFI/centos/grub.cfg
}
