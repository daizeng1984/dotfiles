export ECLIPSE_HOME="/Applications/Eclipse.app/Contents/Eclipse"
export PATH="$PATH:$ECLIPSE_HOME"
export JAVA_HOME=$(/usr/libexec/java_home)
export PATH="$PATH:$HOME/anaconda2/bin:$HOME/Workspace/ConTeXt/tex/texmf-osx-64/bin"
export NODE_PATH="/usr/local/lib/node_modules"
export ANDROID_HOME=$HOME/android/android-sdk
export PATH=$ANDROID_HOME/platform-tools:$PATH
export PATH=$ANDROID_HOME/tools:$ANDROID_HOME/tools/bin:$PATH

# Grab from perl installation, maybe remove if not needed
# PATH="$HOME/perl5/bin${PATH:+:${PATH}}"; export PATH;
# PERL5LIB="$HOME/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
# PERL_LOCAL_LIB_ROOT="$HOME/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
# PERL_MB_OPT="--install_base \"$HOME/perl5\""; export PERL_MB_OPT;
# PERL_MM_OPT="INSTALL_BASE=$HOME/perl5"; export PERL_MM_OPT;

# Python sites
alias pysite='python -m site'
PYTHON_USER=`python3 -c "import site; print(site.USER_BASE)"`
export PATH=$PATH:"$PYTHON_USER/bin"

# Slack notifier
tellslack() {
    if [ -z "$SLACK_WEBHOOK_URL" ]; then
        echo -n "Please input your SLACK_WEBHOOK_URL="
        read __url
        export SLACK_WEBHOOK_URL="$__url"
    fi
    curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"${1}\"}" $SLACK_WEBHOOK_URL
}

# Mac copy
alias cp=copy

# Alert
macnotify() {
osascript -e "display notification \"${1}\" with title \"Alert\""
}
alias alert=notify
alias sshcopyclipboard='sshcopyclipboard $SSHCOPY_REMOTE $SSH_KEY'

# https://apple.stackexchange.com/questions/15318/using-terminal-to-copy-a-file-to-clipboard#answer-15484
file-to-clipboard() {
    osascript - "$@" <<'END' 2> /dev/null
on run {a}
set the clipboard to POSIX file (POSIX path of ((POSIX file a) as alias))
end
END
}


# GCP stuff
# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/zengdai/Downloads/google-cloud-sdk-188.0.1-darwin-x86_64.tar/google-cloud-sdk/path.zsh.inc' ]; then source '/Users/zengdai/Downloads/google-cloud-sdk-188.0.1-darwin-x86_64.tar/google-cloud-sdk/path.zsh.inc'; fi
# The next line enables shell command completion for gcloud.
if [ -f '/Users/zengdai/Downloads/google-cloud-sdk-188.0.1-darwin-x86_64.tar/google-cloud-sdk/completion.zsh.inc' ]; then source '/Users/zengdai/Downloads/google-cloud-sdk-188.0.1-darwin-x86_64.tar/google-cloud-sdk/completion.zsh.inc'; fi

# Leave experimental at the end
# GO related
# gvm
source $HOME/.gvm/scripts/gvm
# virtual go
command -v vg >/dev/null 2>&1 && eval "$(vg eval --shell zsh)"
# Stop slowing my cd https://github.com/markeissler/gvm2/issues/16
unset -f cd
