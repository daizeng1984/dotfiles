DOTFILES_HOME=$HOME/.dotfiles
DOTFILES_SHELL_TYPE=zsh


# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Key binding
bindkey -v
bindkey "^f" forward-word
bindkey "^b" backward-word
bindkey '^p' up-history
bindkey '^n' down-history
bindkey '^w' backward-kill-word
bindkey '^?' backward-delete-char
bindkey '^u' kill-whole-line
bindkey '^r' history-incremental-search-backward
bindkey "^e" end-of-line
bindkey "^a" beginning-of-line
bindkey -s "^h" '^upopd\n'
bindkey -s "^g" 'gst\n'
export KEYTIMEOUT=1

# Include
[ -r $DOTFILES_HOME/bashscript/universal_init.sh ] && source $DOTFILES_HOME/bashscript/universal_init.sh

# completion
autoload -Uz compinit && compinit
zstyle ':completion:*' matcher-list '' \
  'm:{a-z\-}={A-Z\_}' \
  'r:[^[:alpha:]]||[[:alpha:]]=** r:|=* m:{a-z\-}={A-Z\_}' \
  'r:|?=** m:{a-z\-}={A-Z\_}'

# define zsh prompt
parse_git_branch() {
     git branch --no-color 2> /dev/null | sed -e "/^[^*]/d" -e "s/* \(.*\)/\1/"
}
# Define colors
RED="%F{red}"
ORANGE="%F{214}"
CYAN="%F{cyan}"
GREEN="%F{green}"
RESET="%f"
NORMAL_BG="%K{default}"
VI_BG="%K{blue}"
# Set the prompt with colors
DEFAULT_PROMPT='%(?.${ORANGE}%n${RESET}:${CYAN}%3~${RESET} ${RED}$(parse_git_branch)${RESET} > .${ORANGE}%n${RESET}:${CYAN}%~${RESET} ${RED}$(parse_git_branch)${RESET} > '
RPROMPT='${GREEN}$(date "+%H:%M:%S")${RESET}'
# vi mode bkg color
PROMPT_NORMAL='%K{blue}'   # blue background for normal mode
PROMPT_RESET='%k'
function zle-line-init() {
    zle-keymap-select
}

function zle-keymap-select() {
    case $KEYMAP in
        vicmd) PROMPT="${PROMPT_NORMAL}${DEFAULT_PROMPT}${PROMPT_RESET}" ;;
        *) PROMPT="${PROMPT_RESET}${DEFAULT_PROMPT}${PROMPT_RESET}" ;;
    esac
    zle reset-prompt
}

zle -N zle-line-init
zle -N zle-keymap-select
setopt prompt_subst

# Theme
# source "$HOME/.dotfiles/misc/oldstyle.zsh-theme"

# setopt BANG_HIST                 # Treat the '!' character specially during expansion.
# setopt EXTENDED_HISTORY          # Write the history file in the ":start:elapsed;command" format.
# setopt INC_APPEND_HISTORY        # Write to the history file immediately, not when the shell exits.
# setopt SHARE_HISTORY             # Share history between all sessions.
# setopt HIST_EXPIRE_DUPS_FIRST    # Expire duplicate entries first when trimming history.
setopt HIST_IGNORE_DUPS          # Don't record an entry that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS      # Delete old recorded entry if new entry is a duplicate.
# setopt HIST_FIND_NO_DUPS         # Do not display a line previously found.
# setopt HIST_IGNORE_SPACE         # Don't record an entry starting with a space.
# setopt HIST_SAVE_NO_DUPS         # Don't write duplicate entries in the history file.
# setopt HIST_REDUCE_BLANKS        # Remove superfluous blanks before recording entry.
# setopt HIST_VERIFY               # Don't execute immediately upon history expansion.
# setopt HIST_BEEP                 # Beep when accessing nonexistent history.

# no extended history
unsetopt extended_history
